package jg.rpg.utils.config;

import java.awt.Component;
import java.io.File;
import java.util.Iterator;
import java.util.List;

import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.bean.BeanDocumentFactory;
import org.dom4j.io.SAXReader;

import jg.rpg.exceptions.InitException;

public class ConfigMgr {

	private static boolean isInit;
	private static ConfigMgr inst;
	public static ConfigMgr getInstance(){
		if(inst == null){
			inst = new ConfigMgr();
		}
		return inst;
	}
	private ConfigMgr(){

	}

	public void init() throws Exception {
		String path = System.getProperty("user.dir")+
				File.separator+"config"+File.separator+"config.xml";
		Document document = parse(path);
		if(document != null){
			
		}else{
			throw new InitException("ConfigMgr init error!!!");
		}
	}
	
	protected Document parse(String url) throws Exception {
        SAXReader reader = new SAXReader(BeanDocumentFactory.getInstance());
        return reader.read(url);
    }
	
    protected void process(Document document) throws Exception {
        // find all of the windows
        List windows = document.selectNodes("//window");
        for (Iterator iter = windows.iterator(); iter.hasNext();) {
            Element element = (Element) iter.next();
            Object window = element.getData();
            if (window instanceof Component) {
                Component component = (Component) window;
                component.setVisible(true);
            }
        }

        List fonts = document.selectNodes("//@font");
        for (Iterator iter = fonts.iterator(); iter.hasNext();) {
            Attribute font = (Attribute) iter.next();
        }

    }
}

