package jg.rpg.test.uitls;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import org.junit.Test;
import org.msgpack.core.MessagePack;
import org.msgpack.core.MessagePacker;
import org.msgpack.core.MessageUnpacker;

public class MsgPackTest {

	@Test
	public void testDefUse() throws IOException {
		 ByteArrayOutputStream out = new ByteArrayOutputStream();
	        MessagePacker packer = MessagePack.newDefaultPacker(out);
	        packer
	                .packInt(1)
	                .packInt(2)
	                .packString("leo")
	                .packArrayHeader(2)
	                .packString("xxx-xxxx")
	                .packString("yyy-yyyy");
	        packer.close();

	        // Deserialize with MessageUnpacker
	        
	        
	        int id = unpacker.unpackInt();    
	        int num2 = unpacker.unpackInt(); // 1
	        String name = unpacker.unpackString();     // "leo"
	        int numPhones = unpacker.unpackArrayHeader();  // 2
	        String[] phones = new String[numPhones];
	        for (int i = 0; i < numPhones; ++i) {
	            phones[i] = unpacker.unpackString();   // phones = {"xxx-xxxx", "yyy-yyyy"}
	        }
	        unpacker.close();

	        System.out.println(String.format("id:%d, name:%s, phone:[%s]", id, name, join(phones)));
	        System.out.println(num2);
	}


    private static String join(String[] in)
    {
        StringBuilder s = new StringBuilder();
        for (int i = 0; i < in.length; ++i) {
            if (i > 0) {
                s.append(", ");
            }
            s.append(in[i]);
        }
        return s.toString();
    }
}
